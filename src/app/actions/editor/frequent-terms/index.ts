'use server'

import { getServerSession } from 'next-auth'

import { authOptions } from '@/app/api/auth/[...nextauth]/auth-options'
import logger from '@/lib/logger'
import prisma from '@/lib/prisma'

export async function getFrequentTermsAction() {
  try {
    const session = await getServerSession(authOptions)
    const user = session?.user
    const userId = user?.userId as number

    if (!userId) {
      return {
        success: false,
        message: 'userId is required',
      }
    }

    const frequentTermsData = await prisma.frequentTerms.findUnique({
      where: { userId: Number(userId) },
      select: { autoGenerated: true, edited: true },
    })

    if (!frequentTermsData) {
      return {
        success: false,
        message: 'Frequent terms not found',
      }
    }

    logger.info(`frequent terms fetched successfully for ${userId}`)

    return {
      success: true,
      autoGenerated: frequentTermsData.autoGenerated,
      edited: frequentTermsData.edited,
    }
  } catch (error) {
    logger.error(`Failed to get frequent terms ${error}`)

    return {
      success: false,
      message: 'Failed to get frequent terms',
    }
  }
}
