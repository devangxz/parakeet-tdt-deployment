'use server'

import logger from '@/lib/logger'
import prisma from '@/lib/prisma'

export async function getFrequentTermsAction(userId: string) {
  try {
    if (!userId) {
      return {
        success: false,
        message: 'userId is required',
      }
    }

    const frequentTermsData = await prisma.frequentTerms.findUnique({
      where: { userId: Number(userId) },
      select: { autoGenerated: true, edited: true },
    })

    if (!frequentTermsData || (!frequentTermsData.autoGenerated && !frequentTermsData.edited)) {
      return {
        success: false,
        message: 'No frequent terms available',
      }
    }

    logger.info(`frequent terms fetched successfully for ${userId}`)

    return {
      success: true,
      autoGenerated: frequentTermsData.autoGenerated,
      edited: frequentTermsData.edited,
    }
  } catch (error) {
    logger.error(`Failed to get frequent terms for ${userId}. Error: ${error}`)

    return {
      success: false,
      message: 'Failed to get frequent terms',
    }
  }
}
